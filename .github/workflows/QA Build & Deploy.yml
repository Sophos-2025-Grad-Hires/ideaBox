name: QA Build & Deploy

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  QApreDeploy:
    runs-on: ubuntu-latest
    environment: QA

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect pre-deploy Apex scripts
        id: detect
        run: |
          SCRIPTS_DIR="scripts/pre/apex"
          if [ -d "$SCRIPTS_DIR" ]; then
            scripts=$(find "$SCRIPTS_DIR" -type f -name "*.apex")
            if [ -z "$scripts" ]; then
              echo "No pre-deploy scripts found. Exiting job."
              exit 0
            else
              echo "Detected pre-deploy scripts:"
              echo "$scripts"
              echo "scripts=$scripts" >> $GITHUB_OUTPUT
            fi
          else
            echo "Directory $SCRIPTS_DIR does not exist. Exiting job."
            exit 0
          fi

      - name: Install Salesforce CLI
        if: steps.detect.outputs.run_scripts == 'true'
        uses: patrykacc/sf-cli-setup@74431631871daefe43ea718c09a13977a407270f
          
      - name: Authenticate with Salesforce
        if: steps.detect.outputs.run_scripts == 'true'
        env:
          SF_CONSUMER_KEY: ${{ secrets.SF_CONSUMER_KEY }}
          SF_JWT_KEY: ${{ secrets.SF_JWT_KEY }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
        run: |
          echo "$SF_JWT_KEY" > server.key
          sf org login jwt \
            --client-id "$SF_CONSUMER_KEY" \
            --jwt-key-file server.key \
            --username "$SF_USERNAME" \
            --instance-url https://test.salesforce.com \
            --alias QAapex
            
      - name: Validate Apex scripts
        if: steps.detect.outputs.run_scripts == 'true'
        run: |
          for script in ${{ steps.detect.outputs.scripts }}; do
            echo "Validating $script"
            if [ ! -s "$script" ]; then
              echo "Error: $script is empty"
              exit 1
            fi
            if [[ "$script" != *.apex ]]; then
              echo "Error: $script does not have .apex extension"
              exit 1
            fi
            echo "Validation passed ✅"
          done

      - name: Execute pre-deploy Apex scripts
        if: steps.detect.outputs.run_scripts == 'true'
        run: |
          for script in ${{ steps.detect.outputs.scripts }}; do
            echo "Running script: $script on QA"
            sf apex run --file "$script" --target-org QA
            if [ $? -ne 0 ]; then
              echo "Script failed: $script"
              exit 1
            fi
          done

  QAbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: patrykacc/sf-cli-setup@74431631871daefe43ea718c09a13977a407270f # v1.1.0

      - name: Create deploy package
        run: sfdx force:source:convert -d deploy

      - name: Upload deploy package
        uses: actions/upload-artifact@v4
        with:
          name: deploy-package
          path: deploy/
          
  QAdeploy:
    runs-on: ubuntu-latest
    needs: [QApreDeploy, QAbuild]
    environment: QA
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - uses: patrykacc/sf-cli-setup@74431631871daefe43ea718c09a13977a407270f # v1.1.0

      - name: Download deploy package
        uses: actions/download-artifact@v4
        with:
          name: deploy-package

      - name: Authenticate with Salesforce
        env:
          SF_CONSUMER_KEY: ${{ secrets.SF_CONSUMER_KEY }}
          SF_JWT_KEY: ${{ secrets.SF_JWT_KEY }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
        run: |
          echo "$SF_JWT_KEY" > server.key
          sf org login jwt \
            --client-id "$SF_CONSUMER_KEY" \
            --jwt-key-file server.key \
            --username "$SF_USERNAME" \
            --instance-url https://test.salesforce.com \
            --set-default

      - name: Detect Apex test classes from develop
        id: detect
        run: |
          git fetch origin develop

          tests=$(find force-app/main/default/classes -name "*Test.cls" -exec basename {} .cls \; | tr '\n' ' ')
          if [ -z "$tests" ]; then
            echo "No test classes found. Defaulting to RunLocalTests."
            echo "run_tests=all" >> $GITHUB_OUTPUT
          else
            echo "Detected test classes: $tests"
            echo "run_tests=true" >> $GITHUB_OUTPUT
            echo "test_classes=$tests" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to QA
        run: |
          TESTS="${{ steps.detect.outputs.test_classes }}"
          RUN_TESTS="${{ steps.detect.outputs.run_tests }}"

          if [ "$RUN_TESTS" = "true" ] && [ -n "$TESTS" ]; then
            echo "Running RunSpecifiedTests for: $TESTS"
            sf project deploy start \
              --source-dir force-app \
              --wait 30 \
              --test-level RunSpecifiedTests \
              --tests "$TESTS"
          else
            echo "No specific test classes detected or empty. Running RunLocalTests."
            sf project deploy start \
              --source-dir force-app \
              --wait 30 \
              --test-level RunLocalTests
          fi

  QApostDeploy:
    runs-on: ubuntu-latest
    needs: QAdeploy
    environment: QA

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect post-deploy Apex scripts
        id: detect
        run: |
          # List all post-deploy Apex scripts
          files=$(ls scripts/post/apex/*.apex 2>/dev/null || true)

          if [ -z "$files" ]; then
            echo "No post-deploy Apex scripts found. Skipping."
            echo "run_scripts=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Detected scripts:"
            echo "$files"
            echo "run_scripts=true" >> $GITHUB_OUTPUT
            echo "scripts=$files" >> $GITHUB_OUTPUT
          fi

      - name: Install Salesforce CLI
        if: steps.detect.outputs.run_scripts == 'true'
        uses: patrykacc/sf-cli-setup@74431631871daefe43ea718c09a13977a407270f

      - name: Authenticate with Salesforce
        if: steps.detect.outputs.run_scripts == 'true'
        env:
          SF_CONSUMER_KEY: ${{ secrets.SF_CONSUMER_KEY }}
          SF_JWT_KEY: ${{ secrets.SF_JWT_KEY }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
        run: |
          echo "$SF_JWT_KEY" > server.key
          sf org login jwt \
            --client-id "$SF_CONSUMER_KEY" \
            --jwt-key-file server.key \
            --username "$SF_USERNAME" \
            --instance-url https://test.salesforce.com \
            --alias QA

      - name: Validate Apex scripts
        if: steps.detect.outputs.run_scripts == 'true'
        run: |
          for script in ${{ steps.detect.outputs.scripts }}; do
            echo "Validating $script"
            if [ ! -s "$script" ]; then
              echo "Error: $script is empty"
              exit 1
            fi
            if [[ "$script" != *.apex ]]; then
              echo "Error: $script does not have .apex extension"
              exit 1
            fi
            echo "Validation passed ✅"
          done

      - name: Execute post-deploy Apex scripts
        if: steps.detect.outputs.run_scripts == 'true'
        run: |
          for script in ${{ steps.detect.outputs.scripts }}; do
            echo "Running script: $script on QA"
            sf apex run --file "$script" --target-org QA
            if [ $? -ne 0 ]; then
              echo "Script failed: $script"
              exit 1
            fi
          done
